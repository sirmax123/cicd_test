sql_root_credentials = {
  user:     'root',
  password: 'r00tme',
  host:     '127.0.0.1'
}

sql_databases = {
  petclinic: {
    name: 'petclinic',
    username: 'petclinic',
    password: 'petclinic',
    allowed_hosts: [
      '127.0.0.1'
    ]
  },
  other_petclinic: {
    name: 'other_petclinic',
    username: 'other_petclinic',
    password: 'other_petclinic',
    allowed_hosts: [
      '127.0.0.1', 
      '%'
    ]
  }
}



jenkins_slave_public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAu8wYzxDlUQntJUCKoqR68hXQOzf0w4/pc7/8pFEEkLT0hbmmVrR5wgUWajwu1TI8SMCYo9LEClFNkTWcF+cPGBGc1jvlO9j410SvINI401ZkNwI4Tgkcq5NklcXc7zqQMO60gOzlzdy2NkOutQI8pc87eefMN3l6zrxixLMWMJuqj10MIncqkLoS+FtPTZHDiO7iFvlsNjqJX/EnUJHGDeyePQz8MhVYcxQu7UiOpYCSjg28MlNmPoccK0/oAul7cTaItHeqn+B47zojxcBs0iq0gs2eNZdlGNVCcYmhGMaGSQD61vh1hFhKOZdzEhckA8PQVpHB9kfCPakj73AbaQ== root@jenkins"
jenkins_slave_private_key = """-----BEGIN RSA PRIVATE KEY-----
MIIEoAIBAAKCAQEAu8wYzxDlUQntJUCKoqR68hXQOzf0w4/pc7/8pFEEkLT0hbmm
VrR5wgUWajwu1TI8SMCYo9LEClFNkTWcF+cPGBGc1jvlO9j410SvINI401ZkNwI4
Tgkcq5NklcXc7zqQMO60gOzlzdy2NkOutQI8pc87eefMN3l6zrxixLMWMJuqj10M
IncqkLoS+FtPTZHDiO7iFvlsNjqJX/EnUJHGDeyePQz8MhVYcxQu7UiOpYCSjg28
MlNmPoccK0/oAul7cTaItHeqn+B47zojxcBs0iq0gs2eNZdlGNVCcYmhGMaGSQD6
1vh1hFhKOZdzEhckA8PQVpHB9kfCPakj73AbaQIBIwKCAQBbNz9AAORpMLUDdx7E
Br9fpDHw4KoV2C+P/ipBLqpyLAG9S4tOr25W7Ic66ggeaNtzy0LTOnx6CjueTT0w
LmZqxrnkZjwkYhJ3L/1KdLyD6CIMFwVnu0hwmAxIvzDL99+ivRXYOIzgVUKPYrPx
hL5fKiQz5Z20i3Yp5nkdthIXmzqTYzOySOSo8jTer741cIyri4wo/gsaaY9n5zcI
61TZf9eTV3t/fIJTDGMikuUdG2CZyqSgc9BWKzon3DNV2JHyKV/G8Wf5UGJ9vJ8W
Qee3GA5kMpqs6Pjnkyhpuisu3JXspHMp6LwcQeubnAu6ALJ7MSN+DTSfpvZuj5Ca
sqoLAoGBAPZLqqSekSbEdReC3FUnrnWBDX+xegDhQtUAvPWMi4f5vUFHhpHEd1Rw
EAv1vcaIwXuJd+LZHOGaw5JfuetQTaU2+Vac7yaQBOpHHtnHUUB9GlzCurzs1AjM
a3zzCdBAIu/xiLaN6iw3/p//Utzd7LwlINV3Y0lkqPCA/Uczv6aZAoGBAMMyXqK6
fR339/gFYHKKsEqIlOd6g3KXD1Djo3UqIbyQoKEghwLBf45I+bE34+FZSn1PfCwO
3qqI8hIQG+1cOE9lyeVf070OkGmHHnruuk9FhHZbMjlsTR+c0WM7afBpGaz3y1cv
AfMwSmrMuAWXGelZegwm9SpX+8dRhEmbT61RAoGAP1VJIwQz9AahxDeXviAli+38
KCZSkoMRL3U3516niV15zvUimoL6HQbfjgv9mXOfd4m/vf1Qkci18nBjAf604VdH
bgsY7KiwzodRE23Eb6skCTljN+UglIxWJ3GyEPqMpBmJjgc8N0GZPxXE2bVowqp2
KENFaqTa/APpW3O08FMCgYALJ3MfPdtDioMyvnqKM8+POwExzHyKNISIR4Wu7Hb0
1RB+PF98gBXq35k9U6afKax8MG1+3Ec88eHyZ1INkD27ZOb3KgwZbovoxeR8DaQ/
C0ll2VNTvQu4qeAUTIm192CNioCl5W3TYdhd39AAUcb3ZDLcH3u5Rtsv9gePLXJE
awKBgFEcQ0HXNUelIDVYx1c9tWjPl2Btp/qX+yYNZrs1M9gobZ/7Df6iJS7Cswul
nwifYMh4gJioGVfDUkE2tWrczZI4nV2xUJM9dO4P3NJ+rY2dsiIVMWFlZntKLBnZ
/re4x/13K17WN45iwfo73SEviajgJbCvb0j3SErt86IdXtR6
-----END RSA PRIVATE KEY-----
"""

nodes = {
  all_in_one: {
    box: 'centos/6',
    ip: '10.0.10.200',
    roles: [
      'route_add',
      'mysql_server', 
      'mysql_databases',
      'misc',
      'oracle_java',
      'petclinic_pre_configure',
      'frontend'
    ],
    'shell_scripts': [], 
    'ports_pains': []
  }
}


app_config = {
  all_in_one: {
    chef_json: {
      misc: {
        packages_to_install: [
          'mc', 
          'telnet',
          'traceroute',
          'git',
          'redhat-lsb-core', 
          'rpmdevtools'
        ]
      },
      jenkins_slave_public_key: jenkins_slave_public_key,
      mysql_databases: sql_databases,
      mysql_root_connection: sql_root_credentials,
      database_creds: sql_databases[:petclinic],
      database_host: '127.0.0.1',
      mysql_server: {
        root_password:   sql_root_credentials[:password],
        bind_address:    '0.0.0.0',
        bind_port:       '3306',
        data_dir:        '/var/lib/mysql'
      },
      frontend: {
        backends:['127.0.0.1'],
        apache_modules: [
          "expires",
          "deflate",
          "headers",
          "usertrack",
          "setenvif",
          "mime",
          "dav",
          "status",
          "autoindex",
          "info",
          "vhost_alias",
          "negotiation",
          "dir",
          "speling",
          "userdir",
          "alias",
          "substitute",
          "rewrite",
          "proxy",
          "proxy_balancer",
          "proxy_ftp",
          "proxy_http",
          "proxy_ajp",
          "proxy_connect",
          "cache",
          "suexec",
          "disk_cache",
          "cgi",
          "version"
       ]
      }
    }
  }
}


Vagrant.configure("2") do |config|
  config.vm.box = "centos/6"

  nodes.each do |nodename, nodedata|
    puts(nodename)
    current_config = app_config[:"#{nodename}"]
    puts(current_config)
    config.vm.define nodename do |current_node|


      current_node.vm.network 'private_network', ip: nodedata[:ip]
      current_node.vm.provision :hosts, :sync_hosts => true

        
      if nodedata[:ports_pains].respond_to?('each')
        nodedata[:ports_pains].each do |port_pair| 
          current_node.vm.network "forwarded_port", guest: port_pair[:guest], host: port_pair[:host]
        end
      end      
              
      if nodedata[:shell_scripts_pre_chef].respond_to?('each')
        nodedata[:shell_scripts_pre_chef].each do |shell_script|
          puts(shell_script)
          shell_script.each do |method, script_code| 
            current_node.vm.provision "shell", "#{method}": script_code
          end
        end
      end
        
      current_node.vm.provision "chef_solo" do |chef|
        chef.cookbooks_path = ["cookbooks", "site-cookbooks"]
        chef.roles_path = ["roles"]
          
        nodedata[:roles].each do |current_role|
          chef.add_role(current_role)
          chef.json = current_config[:chef_json]
        end    
      end

      if nodedata[:shell_scripts_post_chef].respond_to?('each')
        nodedata[:shell_scripts_post_chef].each do |shell_script|
          puts(shell_script)
          shell_script.each do |method, script_code| 
            current_node.vm.provision "shell", "#{method}": script_code
          end
        end
      end 
    end
  end
end
